{"ast":null,"code":"import _slicedToArray from\"C:/Users/HP/Desktop/IT School/Projects/ItSchool News/Itschool-news/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect}from\"react\";import Layout from\"../components/Layout\";import Container from\"react-bootstrap/Container\";import{FavoritesContext}from\"../store/Favorites/context\";import NewsCardList from\"../components/NewsCardList\";// Importam hook-ul useLocalStorageState.\nimport{useLocalStorage}from\"../utils/hooks/useLocalStorage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Favorites(){var _useContext=useContext(FavoritesContext),favoritesState=_useContext.favoritesState;var products=favoritesState.products;// Extragem functia de modificare a localStorage-ului. Nu avem nevoie de state-ul din localStorage, conventia este ca pentru variabile neutilizate sa punem denumirea _.\n// Comentariul eslint-disable-next-line dezactiveaza eslint pentru urmatoarea linie (sa nu se planga ca nu utilizam variabila _).\n//eslint-disable-next-line\nvar _useLocalStorage=useLocalStorage(\"favorites\",favoritesState),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),_=_useLocalStorage2[0],setLocalStorageState=_useLocalStorage2[1];// Adaugarea in localStorage este un efect, atunci cand se modifica produsele favorite.\n// Cum stim ca s-au modificat produsele favorite? Primim o noua valoare a lui favoritesState.\n// setLocalStorageState este sugerat sa fie adaugat la dependente de o regula de lining.\nuseEffect(function(){setLocalStorageState(favoritesState);},[favoritesState,setLocalStorageState]);return/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsxs(Container,{className:\"my-5\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-5 pt-3\",children:\"\\u0218tirile tale favorite\"}),products.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Momentan nu ai nicio \\u0219tire favorit\\u0103.\"}):/*#__PURE__*/_jsx(NewsCardList,{newsList:products})]})});}export default Favorites;","map":{"version":3,"sources":["C:/Users/HP/Desktop/IT School/Projects/ItSchool News/Itschool-news/src/pages/Favorites.jsx"],"names":["useContext","useEffect","Layout","Container","FavoritesContext","NewsCardList","useLocalStorage","Favorites","favoritesState","products","_","setLocalStorageState","length"],"mappings":"yLAAA,OAASA,UAAT,CAAqBC,SAArB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA;AACA,OAASC,eAAT,KAAgC,gCAAhC,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,gBAA2BP,UAAU,CAACI,gBAAD,CAArC,CAAQI,cAAR,aAAQA,cAAR,CACA,GAAQC,CAAAA,QAAR,CAAqBD,cAArB,CAAQC,QAAR,CACA;AACA;AACA;AACA,qBAAkCH,eAAe,CAC/C,WAD+C,CAE/CE,cAF+C,CAAjD,sDAAOE,CAAP,sBAAUC,oBAAV,sBAIA;AACA;AACA;AACAV,SAAS,CAAC,UAAM,CACdU,oBAAoB,CAACH,cAAD,CAApB,CACD,CAFQ,CAEN,CAACA,cAAD,CAAiBG,oBAAjB,CAFM,CAAT,CAIA,mBACE,KAAC,MAAD,wBACE,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACE,WAAI,SAAS,CAAC,WAAd,wCADF,CAEGF,QAAQ,CAACG,MAAT,GAAoB,CAApB,cACC,qEADD,cAGC,KAAC,YAAD,EAAc,QAAQ,CAAEH,QAAxB,EALJ,GADF,EADF,CAYD,CAED,cAAeF,CAAAA,SAAf","sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FavoritesContext } from \"../store/Favorites/context\";\r\nimport NewsCardList from \"../components/NewsCardList\";\r\n// Importam hook-ul useLocalStorageState.\r\nimport { useLocalStorage } from \"../utils/hooks/useLocalStorage\";\r\n\r\nfunction Favorites() {\r\n  const { favoritesState } = useContext(FavoritesContext);\r\n  const { products } = favoritesState;\r\n  // Extragem functia de modificare a localStorage-ului. Nu avem nevoie de state-ul din localStorage, conventia este ca pentru variabile neutilizate sa punem denumirea _.\r\n  // Comentariul eslint-disable-next-line dezactiveaza eslint pentru urmatoarea linie (sa nu se planga ca nu utilizam variabila _).\r\n  //eslint-disable-next-line\r\n  const [_, setLocalStorageState] = useLocalStorage(\r\n    \"favorites\",\r\n    favoritesState\r\n  );\r\n  // Adaugarea in localStorage este un efect, atunci cand se modifica produsele favorite.\r\n  // Cum stim ca s-au modificat produsele favorite? Primim o noua valoare a lui favoritesState.\r\n  // setLocalStorageState este sugerat sa fie adaugat la dependente de o regula de lining.\r\n  useEffect(() => {\r\n    setLocalStorageState(favoritesState);\r\n  }, [favoritesState, setLocalStorageState]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Container className=\"my-5\">\r\n        <h1 className=\"mb-5 pt-3\">Știrile tale favorite</h1>\r\n        {products.length === 0 ? (\r\n          <p>Momentan nu ai nicio știre favorită.</p>\r\n        ) : (\r\n          <NewsCardList newsList={products} />\r\n        )}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n"]},"metadata":{},"sourceType":"module"}